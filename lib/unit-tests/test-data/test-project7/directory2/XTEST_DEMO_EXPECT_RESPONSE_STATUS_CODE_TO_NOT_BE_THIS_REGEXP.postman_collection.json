{
	"info": {
		"_postman_id": "e119127d-cba3-4cfb-8871-72651a3cfe3b",
		"name": "XTEST_DEMO_EXPECT_RESPONSE_STATUS_CODE_TO_NOT_BE_THIS_REGEXP",
		"description": "Objective: Validate response status code is NOT a given regular expression.\n\n``` javascript\nexpectResponseStatusCodeToBe(expectedValue [RegExp], specialHandling [String] = \"notThisExpectedValue\");\n\n```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24782047"
	},
	"item": [
		{
			"name": "status code 200 - RegExp literal NOT /^4/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Load xtest",
							"var xtest = eval(pm.globals.get(\"xtest\"));",
							"",
							"//Start testing using xtest",
							"startXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(/^4/, \"notThisExpectedValue\");",
							"",
							"//End testing using xtest",
							"endXTest();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://xtest-demo.httpsim.schwaby.io/responseStatusCode200",
					"protocol": "https",
					"host": [
						"xtest-demo",
						"httpsim",
						"schwaby",
						"io"
					],
					"path": [
						"responseStatusCode200"
					]
				}
			},
			"response": []
		},
		{
			"name": "status code 204 - RegExp literal NOT /^1/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Load xtest",
							"var xtest = eval(pm.globals.get(\"xtest\"));",
							"",
							"//Start testing using xtest",
							"startXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(/^1/, \"notThisExpectedValue\");",
							"",
							"//End testing using xtest",
							"endXTest();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://xtest-demo.httpsim.schwaby.io/responseStatusCode204",
					"protocol": "https",
					"host": [
						"xtest-demo",
						"httpsim",
						"schwaby",
						"io"
					],
					"path": [
						"responseStatusCode204"
					]
				}
			},
			"response": []
		},
		{
			"name": "status code 404 - RegExp literal NOT /^5/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Load xtest",
							"var xtest = eval(pm.globals.get(\"xtest\"));",
							"",
							"//Start testing using xtest",
							"startXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(/^5/, \"notThisExpectedValue\");",
							"",
							"//End testing using xtest",
							"endXTest();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://xtest-demo.httpsim.schwaby.io/responseStatusCode404",
					"protocol": "https",
					"host": [
						"xtest-demo",
						"httpsim",
						"schwaby",
						"io"
					],
					"path": [
						"responseStatusCode404"
					]
				}
			},
			"response": []
		},
		{
			"name": "status code 500 - RegExp literal NOT /^2/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Load xtest",
							"var xtest = eval(pm.globals.get(\"xtest\"));",
							"",
							"//Start testing using xtest",
							"startXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(/^2/, \"notThisExpectedValue\");",
							"",
							"//End testing using xtest",
							"endXTest();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://xtest-demo.httpsim.schwaby.io/responseStatusCode500",
					"protocol": "https",
					"host": [
						"xtest-demo",
						"httpsim",
						"schwaby",
						"io"
					],
					"path": [
						"responseStatusCode500"
					]
				}
			},
			"response": []
		},
		{
			"name": "status code 200 - RegExp constructor NOT new RegExp('1$')",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Load xtest",
							"var xtest = eval(pm.globals.get(\"xtest\"));",
							"",
							"//Start testing using xtest",
							"startXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(new RegExp('1$'), \"notThisExpectedValue\");",
							"",
							"//End testing using xtest",
							"endXTest();"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://xtest-demo.httpsim.schwaby.io/responseStatusCode200",
					"protocol": "https",
					"host": [
						"xtest-demo",
						"httpsim",
						"schwaby",
						"io"
					],
					"path": [
						"responseStatusCode200"
					]
				}
			},
			"response": []
		}
	]
}