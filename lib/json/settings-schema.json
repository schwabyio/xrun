{
    "timeoutCollection": {
      "doc": "Newman timeout - Specify the time (in milliseconds) to wait for the entire collection run to complete execution.",
      "format": "nat-not-zero",
      "default": 3600000,
      "arg": "timeoutCollection"
    },
    "timeoutRequest": {
      "doc": "Newman timeoutRequest - Specify the time (in milliseconds) to wait for requests to return a response.",
      "format": "nat-not-zero",
      "default": 600000,
      "arg": "timeoutRequest"
    },
    "timeoutScript": {
      "doc": "Newman timeoutScript - Specify the time (in milliseconds) to wait for scripts to complete execution.",
      "format": "nat-not-zero",
      "default": 600000,
      "arg": "timeoutScript"
    },
    "generateJUnitResults": {
      "doc": "Generate JUnit results reporter (provided by Postman's Newman).",
      "format": "boolean",
      "default": false,
      "arg": "generateJUnitResults"
    },
    "autoOpenTestResultHtml": {
      "doc": "Auto open test result in web browser after a run.",
      "format": "boolean",
      "default": false,
      "arg": "autoOpenTestResultHtml"
    },
    "testResultsBasePath": {
      "doc": "If not specified, the default is the same path to your local settings.json.",
      "format": "string",
      "default": "",
      "arg": "testResultsBasePath"
    },
    "uploadTestResultsToWebserver": {
      "doc": "Upload html test results to web server (for CI).",
      "format": "boolean",
      "default": false,
      "arg": "uploadTestResultsToWebserver"
    },
    "numberOfDaysToKeepTestResultsOnWebserver": {
      "doc": "Upload html test results to web server (for CI).",
      "format": "nat",
      "default": 30,
      "arg": "numberOfDaysToKeepTestResultsOnWebserver"
    },
    "sendSummaryResultsToSlack": {
      "doc": "Send summary test results to slack (for CI).",
      "format": "boolean",
      "default": false,
      "arg": "sendSummaryResultsToSlack"
    },
    "slackIconTestsPass": {
      "doc": "Slack icon to use when all tests pass.",
      "format": "non-empty-no-spaces-string",
      "default": ":pass:",
      "arg": "slackIconTestsPass"
    },
    "slackIconTestsFail": {
      "doc": "Slack icon to use when one or more tests fail.",
      "format": "non-empty-no-spaces-string",
      "default": ":fail:",
      "arg": "slackIconTestsFail"
    },
    "slackChannel": {
      "doc": "Slack channel to use.",
      "format": "string",
      "default": "",
      "arg": "slackChannel"
    },
    "slackHardAlertOnSuccess": {
      "doc": "Send a hard alert to slack channel (to get notified) on success.",
      "format": "boolean",
      "default": false,
      "arg": "slackHardAlertOnSuccess"
    },
    "slackHardAlertOnFailure": {
      "doc": "Send a hard alert to slack channel (to get notified) on failure.",
      "format": "boolean",
      "default": false,
      "arg": "slackHardAlertOnFailure"
    },
    "slackToken": {
      "doc": "Slack bot token (begins with 'xoxb'). See here for more info on how to create: https://api.slack.com/authentication/basics",
      "format": "string",
      "default": "",
      "arg": "slackToken"
    },
    "limitConcurrency": {
      "doc": "The maximum number of test cases you want to allow running concurrently/parallel.",
      "format": "nat-not-zero",
      "default": 1,
      "arg": "limitConcurrency"
    },
    "projectName": {
      "doc": "The name of the project you are running tests against (used in reports, slack, etc.).",
      "format": "non-empty-no-spaces-string",
      "default": null,
      "arg": "projectName"
    },
    "environmentType": {
      "doc": "The environment you want to run your tests against. (e.g. specifies which <xRunProjectPath>/xrun/<environmentType>.bulk file to use.)",
      "format": "non-empty-no-spaces-string",
      "default": null,
      "arg": "environmentType"
    },
    "xRunProjectPath": {
      "doc": "The local xRun project path. (i.e. the local absolute path location of Postman tests in xRun project format.)",
      "format": "non-empty-string",
      "default": null,
      "arg": "xRunProjectPath"
    },
    "xRunProjectDirectoryName": {
      "doc": "The name of the directory within xRunProjectPath used to store files used by xrun (e.g. <environmentType>.bulk, exclude-tests.json, etc.)",
      "format": "non-empty-string",
      "default": "xrun",
      "arg": "xRunProjectDirectoryName"
    },
    "ignoreRedirects": {
      "doc": "Instructs Postman to ignore redirects.",
      "format": "boolean",
      "default": true,
      "arg": "ignoreRedirects"
    },
    "trustedCaCertDirectoryPath": {
      "doc": "Directory path location to a single PEM formatted certificate file containing one or more trusted CAs. If an absolute directory path is provided that will be used, otherwise if just a directory name is provided, it will look for that directory from within the configured xRunProjectDirectoryName (e.g. <xRunProjectPath>/xrun/trustedCaCert ). Note: 1. The file name must not be included in the directory path. 2. Only one single pem file must exist in the directory (multiple CAs can be put in the single file). 3. The file must include a .pem file extension to be found.",
      "format": "non-empty-string",
      "default": "trustedCaCert",
      "arg": "trustedCaCertDirectoryPath"
    }
}