useStrictValidation:true
xtest:function xtest(){var version="1.1.0";var xml2js=require("xml2js");var strictValidationEnabled=false;var copyOfResponseStatusCode=0;var copyOfResponseReasonMessage="";var copyOfResponseHeadersList=[];var copyOfResponseTime=0;var copyOfResponseBodyObject={};const INFINITY=1/0;var strftime=new strftimeModule();var timeZoneScheme={};timeZoneScheme.A="+0100";timeZoneScheme.B="+0200";timeZoneScheme.C="+0300";timeZoneScheme.D="+0400";timeZoneScheme.E="+0500";timeZoneScheme.IST="+0530";timeZoneScheme.F="+0600";timeZoneScheme.G="+0700";timeZoneScheme.H="+0800";timeZoneScheme.I="+0900";timeZoneScheme.K="+1000";timeZoneScheme.L="+1100";timeZoneScheme.M="+1200";timeZoneScheme.N="-0100";timeZoneScheme.O="-0200";timeZoneScheme.P="-0300";timeZoneScheme.Q="-0400";timeZoneScheme.R="-0500";timeZoneScheme.S="-0600";timeZoneScheme.T="-0700";timeZoneScheme.U="-0800";timeZoneScheme.V="-0900";timeZoneScheme.W="-1000";timeZoneScheme.X="-1100";timeZoneScheme.Y="-1200";timeZoneScheme.Z="+0000";this.startXTest=function startXTest(pm,useStrictValidation){var contentType="";if(useStrictValidation==="true"||useStrictValidation===true){strictValidationEnabled=true}else{strictValidationEnabled=false}copyOfResponseStatusCode=pm.response.code;copyOfResponseReasonMessage=pm.response.reason;copyOfResponseHeadersList=JSON.parse(JSON.stringify(pm.response.headers));copyOfResponseTime=pm.response.responseTime;copyOfResponseHeadersList.forEach(function(item){if(item.key.toLowerCase()==="content-type"){contentType=item.value.toLowerCase()}});if(/^application\/(.*)json/.test(contentType)){try{copyOfResponseBodyObject=JSON.parse(pm.response.text())}catch(e){tests["ERROR trying to parse expected json response: "+e.message]=0}}else{if((/^application\/(.*)xml/.test(contentType))||(/^text\/(.*)xml/.test(contentType))){if(pm.response.text()!==""){xml2js.parseString(pm.response.text(),{explicitArray:false,async:false},function(err,result){if(err){console.log("xtest: ERROR CONVERTING XML TO JSON OBJECT: "+err)}else{removeAllXmlNameSpaceData(result);copyOfResponseBodyObject=JSON.parse(JSON.stringify(result));console.log("xtest: XML CONVERTED TO JSON OBJECT: "+JSON.stringify(copyOfResponseBodyObject,null,2))}})}}else{copyOfResponseBodyObject={}}}};this.expectResponseStatusCodeToBe=function expectResponseStatusCodeToBe(expectedValue,specialHandling){var regExpTrue=(expectedValue instanceof RegExp);var assertionDescriptionPrefix="RESPONSE STATUS CODE";var environmentVariableKey="";var collectionVariableKey="";var validationResult=false;if(specialHandling==="setAsEnvironmentVariable"){environmentVariableKey=expectedValue;pm.environment.set(environmentVariableKey,copyOfResponseStatusCode);assertionPass(assertionDescriptionPrefix,"The responseStatusCode '"+copyOfResponseStatusCode+"' was applied to the environmentVariableKey '"+environmentVariableKey+"'.");return}else{if(specialHandling==="setAsCollectionVariable"){collectionVariableKey=expectedValue;pm.collectionVariables.set(collectionVariableKey,copyOfResponseStatusCode);assertionPass(assertionDescriptionPrefix,"The responseStatusCode '"+copyOfResponseStatusCode+"' was applied to the collectionVariableKey '"+collectionVariableKey+"'.");return}}if(regExpTrue===true){validationResult=expectedValue.test(copyOfResponseStatusCode);if(specialHandling==="notThisExpectedValue"){validationResult=(!validationResult);if(validationResult===true){assertionPass(assertionDescriptionPrefix,"Response status code with RegExp notThisExpectedValue '"+expectedValue+"' correctly did NOT match the actualValue '"+copyOfResponseStatusCode+"'.")}else{assertionFail(assertionDescriptionPrefix,"Response status code with RegExp notThisExpectedValue '"+expectedValue+"' INCORRECTLY DID match actualValue '"+copyOfResponseStatusCode+"'.")}}else{if(validationResult===true){assertionPass(assertionDescriptionPrefix,"Response status code with RegExp expectedValue '"+expectedValue+"' correctly matched actualValue '"+copyOfResponseStatusCode+"'.")}else{assertionFail(assertionDescriptionPrefix,"Response status code with RegExp expectedValue '"+expectedValue+"' INCORRECTLY did NOT match actualValue '"+copyOfResponseStatusCode+"'.")}}}else{validationResult=exactComparison(expectedValue,copyOfResponseStatusCode);if(specialHandling==="notThisExpectedValue"){validationResult=(!validationResult);if(validationResult===true){assertionPass(assertionDescriptionPrefix,"Response status code with notThisExpectedValue '"+expectedValue+"' correctly did NOT match the actualValue '"+copyOfResponseStatusCode+"'.")}else{assertionFail(assertionDescriptionPrefix,"Response status code with notThisExpectedValue '"+expectedValue+"' INCORRECTLY DID match actualValue '"+copyOfResponseStatusCode+"'.")}}else{if(validationResult===true){assertionPass(assertionDescriptionPrefix,"Response status code with expectedValue '"+expectedValue+"' correctly matched actualValue '"+copyOfResponseStatusCode+"'.")}else{assertionFail(assertionDescriptionPrefix,"Response status code with expectedValue '"+expectedValue+"' INCORRECTLY did NOT match actualValue '"+copyOfResponseStatusCode+"'.")}}}};this.expectResponseToHaveHeader=function expectResponseToHaveHeader(expectedHeaderKey,expectedHeaderValue,specialHandling){var assertionDescriptionPrefix="RESPONSE HEADER";var actualHeaderKey="";var actualHeaderValue="";var matchFlag=false;var matchedActualHeaderKey="";var matchedActualHeaderValue="";var regExpTrue=(expectedHeaderValue instanceof RegExp);var regExpDescriptionString="";var environmentVariableKey="";var collectionVariableKey="";var storedActualHeaderValue="";if(regExpTrue===true){regExpDescriptionString=" (as a regular expression) "}else{regExpDescriptionString=""}copyOfResponseHeadersList.some(function(item){actualHeaderKey=item.key;actualHeaderValue=item.value;if(specialHandling==="notThisExpectedKey"){if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;return true}}else{if(specialHandling==="notThisExpectedValue"){if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){storedActualHeaderValue=actualHeaderValue;if(regExpTrue===true){if(expectedHeaderValue.test(actualHeaderValue)===true){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;matchedActualHeaderValue=actualHeaderValue;return true}}else{if(expectedHeaderValue===actualHeaderValue){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;matchedActualHeaderValue=actualHeaderValue;return true}}}}else{if(specialHandling==="setAsEnvironmentVariable"){if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){matchFlag=true;environmentVariableKey=expectedHeaderValue;pm.environment.set(environmentVariableKey,actualHeaderValue);return true}}else{if(specialHandling==="setAsCollectionVariable"){if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){matchFlag=true;collectionVariableKey=expectedHeaderValue;pm.collectionVariables.set(collectionVariableKey,actualHeaderValue);return true}}else{if(expectedHeaderValue===undefined){if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;return true}}else{if(expectedHeaderKey.toLowerCase()===actualHeaderKey.toLowerCase()){if(regExpTrue===true){if(expectedHeaderValue.test(actualHeaderValue)===true){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;matchedActualHeaderValue=actualHeaderValue;return true}}else{if(expectedHeaderValue===actualHeaderValue){matchFlag=true;matchedActualHeaderKey=actualHeaderKey;matchedActualHeaderValue=actualHeaderValue;return true}}}}}}}}});if((specialHandling==="notThisExpectedKey")||(specialHandling==="notThisExpectedValue")){matchFlag=(!matchFlag)}if(specialHandling==="notThisExpectedKey"){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The header key with notThisExpectedKey '"+expectedHeaderKey+"' correctly did NOT match any response header keys.")}else{assertionFail(assertionDescriptionPrefix,"The header key with notThisExpectedKey '"+expectedHeaderKey+"' INCORRECTLY DID match a response header key.")}}else{if(specialHandling==="notThisExpectedValue"){if(regExpTrue===true){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"For header key '"+expectedHeaderKey+"', the header value with a RegExp notThisExpectedValue '"+expectedHeaderValue+"' correctly did NOT match the actual header value of '"+storedActualHeaderValue+"'.")}else{assertionFail(assertionDescriptionPrefix,"For header key '"+expectedHeaderKey+"', the header value with a RegExp notThisExpectedValue '"+expectedHeaderValue+"' INCORRECTLY DID match the actual header value of '"+storedActualHeaderValue+"'.")}}else{if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"For header key '"+expectedHeaderKey+"', the header value with notThisExpectedValue '"+expectedHeaderValue+"' correctly did NOT match the actual header value of '"+storedActualHeaderValue+"'.")}else{assertionFail(assertionDescriptionPrefix,"For header key '"+expectedHeaderKey+"', the header value with notThisExpectedValue '"+expectedHeaderValue+"' INCORRECTLY DID match the actual header value of '"+storedActualHeaderValue+"'.")}}}else{if(specialHandling==="setAsEnvironmentVariable"){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' matched an actual response header key and applied the setAsEnvironmentVariable specialHandling using the environmentVariableKey: '"+environmentVariableKey+"'")}else{assertionFail(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' did NOT match an actual response header key (unable to apply the setAsEnvironmentVariable specialHandling): "+JSON.stringify(copyOfResponseHeadersList))}}else{if(specialHandling==="setAsCollectionVariable"){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' matched an actual response header key and applied the setAsCollectionVariable specialHandling using the collectionVariableKey: '"+collectionVariableKey+"'")}else{assertionFail(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' did NOT match an actual response header key (unable to apply the setAsCollectionVariable specialHandling): "+JSON.stringify(copyOfResponseHeadersList))}}else{if(expectedHeaderValue===undefined){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' matched an actual response header key (but not validating the header value).")}else{assertionFail(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' did NOT match an actual response header key: "+JSON.stringify(copyOfResponseHeadersList))}}else{if(regExpTrue===true){if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' and expectedHeaderValue (as a regular expression) '"+expectedHeaderValue+"' matched an actual response header key and value.")}else{assertionFail(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' and expectedHeaderValue (as a regular expression) '"+expectedHeaderValue+"' did NOT match an actual response header key and value: "+JSON.stringify(copyOfResponseHeadersList))}}else{if(matchFlag===true){assertionPass(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' and expectedHeaderValue '"+expectedHeaderValue+"' matched an actual response header key and value.")}else{assertionFail(assertionDescriptionPrefix,"The expectedHeaderKey '"+expectedHeaderKey+"' and expectedHeaderValue '"+expectedHeaderValue+"' did NOT match an actual response header key and value: "+JSON.stringify(copyOfResponseHeadersList))}}}}}}}};this.expectResponseBodyToHaveProperty=function expectResponseBodyToHaveProperty(jsonPathToProperty,expectedValue,specialHandling){var assertionDescriptionPrefix="RESPONSE BODY";var actualValue=getObjectValueByPath(copyOfResponseBodyObject,jsonPathToProperty);var testResult={};if(specialHandling==="notThisExpectedKey"){if(actualValue===undefined){assertionPass(assertionDescriptionPrefix,"The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey correctly does NOT exist.")}else{assertionFail(assertionDescriptionPrefix,"The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey INCORRECTLY exists and has actualValue '"+actualValue+"'.")}}else{if(actualValue!==undefined){testResult=testExpectedValueWithActualValue(expectedValue,actualValue,specialHandling,jsonPathToProperty);if(testResult.passed===true){assertionPass(assertionDescriptionPrefix,testResult.description);deleteObjectValueByPath(copyOfResponseBodyObject,jsonPathToProperty)}else{assertionFail(assertionDescriptionPrefix,testResult.description)}}else{assertionFail(assertionDescriptionPrefix,"RESPONSE BODY - RESULT FAIL: Unable to locate property '"+jsonPathToProperty+"' in json response body: "+JSON.stringify(copyOfResponseBodyObject))}}};this.expectResponseBodyToHaveUnorderedArray=function expectResponseBodyToHaveUnorderedArray(jsonPathToArray,validationList){var assertionDescriptionPrefix="RESPONSE BODY (UNORDERED ARRAY)";var copyOfUnorderedArrayToValidate=getObjectValueByPath(copyOfResponseBodyObject,jsonPathToArray);var actualValue=undefined;var pathToProperty="";var expectedValue=undefined;var specialHandling=undefined;var jsonPathToProperty="";var testDescription="";var testDescriptionExpectedValue="";var testDescriptionSpecialHandling="";var testResult={};var i=0;var j=0;var matchFound=false;var allItemsMatch=false;var arrayIndexMatch=0;var jsonBasePathToArray=jsonPathToArray;if((validationList instanceof Array)===false){assertionFail(assertionDescriptionPrefix,"Oops, expectResponseBodyToHaveUnorderedArray() error: 'validationList' provided is not of type Array.");return}if(copyOfUnorderedArrayToValidate instanceof Array){if(!validationList[0].hasOwnProperty("pathToProperty")){assertionDescriptionPrefix="RESPONSE BODY (UNORDERED SIMPLE ARRAY)";for(i=0;i<validationList.length;i++){expectedValue=validationList[i];for(j=0;j<copyOfUnorderedArrayToValidate.length;j++){actualValue=copyOfUnorderedArrayToValidate[j];if(actualValue===expectedValue){const fullPath=joinBasePathAndIndex(jsonBasePathToArray,j);assertionPass(assertionDescriptionPrefix,"Found a match of expectedValue '"+expectedValue+"' with actualValue at propertyPath: '"+fullPath+"'.");deleteObjectValueByPath(copyOfResponseBodyObject,fullPath);matchFound=true;break}else{matchFound=false}}if(matchFound===false){assertionFail(assertionDescriptionPrefix,"No match found for expectedValue '"+expectedValue+"' within jsonPathToArray: '"+jsonBasePathToArray+"'.")}}}else{for(i=0;i<copyOfUnorderedArrayToValidate.length;i++){for(j=0;j<validationList.length;j++){if((validationList[j].hasOwnProperty("pathToProperty"))&&(validationList[j]["pathToProperty"]!=="")){pathToProperty=validationList[j]["pathToProperty"]}else{assertionFail(assertionDescriptionPrefix,"Oops, expectResponseBodyToHaveUnorderedArray() error: Missing required 'pathToProperty' in validationList item '"+j+"'.");return}if(validationList[j].hasOwnProperty("expectedValue")){expectedValue=validationList[j]["expectedValue"]}else{expectedValue=undefined}if(validationList[j].hasOwnProperty("specialHandling")){specialHandling=validationList[j]["specialHandling"]}else{specialHandling=undefined}jsonPathToProperty=joinBasePathIndexAndPathToProperty(jsonBasePathToArray,i,pathToProperty);actualValue=getObjectValueByPath(copyOfResponseBodyObject,jsonPathToProperty);if(specialHandling==="notThisExpectedKey"){if(actualValue===undefined){testResult.passed=true;testResult.description="The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey correctly does NOT exist.";matchFound=true}else{testResult.passed=false;testResult.description="The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey INCORRECTLY exists and has actualValue '"+actualValue+"'.";matchFound=false;break}}else{if(actualValue!==undefined){testResult=testExpectedValueWithActualValue(expectedValue,actualValue,specialHandling,jsonPathToProperty);if(testResult.passed===true){matchFound=true}else{matchFound=false;break}}else{matchFound=false;break}}}if(matchFound===true){allItemsMatch=true;arrayIndexMatch=i;break}else{allItemsMatch=false}}if(allItemsMatch===true){for(j=0;j<validationList.length;j++){pathToProperty=validationList[j]["pathToProperty"];if(validationList[j].hasOwnProperty("expectedValue")){expectedValue=validationList[j]["expectedValue"]}else{expectedValue=undefined}if(validationList[j].hasOwnProperty("specialHandling")){specialHandling=validationList[j]["specialHandling"]}else{specialHandling=undefined}jsonPathToProperty=joinBasePathIndexAndPathToProperty(jsonBasePathToArray,arrayIndexMatch,pathToProperty);actualValue=getObjectValueByPath(copyOfResponseBodyObject,jsonPathToProperty);if(specialHandling==="notThisExpectedKey"){if(actualValue===undefined){testResult.passed=true;testResult.description="The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey correctly does NOT exist."}else{testResult.passed=false;testResult.description="The jsonPathToProperty '"+jsonPathToProperty+"' with notThisExpectedKey INCORRECTLY exists and has actualValue '"+actualValue+"'."}}else{testResult=testExpectedValueWithActualValue(expectedValue,actualValue,specialHandling,jsonPathToProperty)}assertionPass(assertionDescriptionPrefix,testResult.description);deleteObjectValueByPath(copyOfResponseBodyObject,jsonPathToProperty)}}else{for(j=0;j<validationList.length;j++){pathToProperty=validationList[j]["pathToProperty"];if(validationList[j].hasOwnProperty("expectedValue")){expectedValue=validationList[j]["expectedValue"];testDescriptionExpectedValue=" expectedValue: '"+expectedValue+"'"}else{expectedValue=undefined;testDescriptionExpectedValue=""}if(validationList[j].hasOwnProperty("specialHandling")){specialHandling=validationList[j]["specialHandling"];testDescriptionSpecialHandling=" specialHandling: '"+specialHandling+"'"}else{specialHandling=undefined;testDescriptionSpecialHandling=""}assertionFail(assertionDescriptionPrefix,"pathToProperty: '"+pathToProperty+"'"+testDescriptionExpectedValue+testDescriptionSpecialHandling+".")}}}}else{assertionFail(assertionDescriptionPrefix,"Unable to locate Array given jsonPathToArray '"+jsonBasePathToArray+"' in json response body: "+JSON.stringify(copyOfResponseBodyObject));return}function joinBasePathAndIndex(jsonBasePathToArray,index){if(Array.isArray(jsonBasePathToArray)){var newArray=JSON.parse(JSON.stringify(jsonBasePathToArray));var indexAsString=index.toString();newArray.push(indexAsString);return newArray}else{var newFullPath=jsonBasePathToArray+"."+index.toString();return newFullPath}}function joinBasePathIndexAndPathToProperty(jsonBasePathToArray,index,pathToProperty){if(Array.isArray(pathToProperty)){var newJoinedPathAsArray=getPathAsArray(jsonBasePathToArray);newJoinedPathAsArray.push(index.toString());pathToProperty.forEach(function(item){newJoinedPathAsArray.push(item.toString())});return newJoinedPathAsArray}else{var newJoinedPathAsString=getPathAsString(jsonBasePathToArray);newJoinedPathAsString+="."+index.toString();newJoinedPathAsString+="."+pathToProperty;return newJoinedPathAsString}}function getPathAsArray(path){if(Array.isArray(path)){return path}else{if(path.indexOf(".")>=0){return path.split(".")}else{return[path]}}}function getPathAsString(path){if(Array.isArray(path)){var newPathAsString="";path.forEach(function(item){newPathAsString+="."+item});return newPathAsString}else{return path}}};this.endXTest=function endXTest(){var assertionDescriptionPrefix="STRICT RESPONSE VALIDATION";var testDescription="";if(strictValidationEnabled===true){cleanObject(copyOfResponseBodyObject);if(Object.keys(copyOfResponseBodyObject).length===0){assertionPass(assertionDescriptionPrefix,"All response json body items have been properly validated.")}else{assertionFail(assertionDescriptionPrefix,"Still have the following non-validated response json body items: "+JSON.stringify(copyOfResponseBodyObject))}}};this.date=function date(dateFormat,secondsOffset,timeZone){if(!dateFormat){return"Oops, not a valid dateFormat value: "+dateFormat}if(isNotValidInteger(secondsOffset)){return"Oops, not a valid secondsOffset value: "+secondsOffset}if(!timeZoneScheme.hasOwnProperty(timeZone)){return"Oops, not a valid timeZoneScheme value: "+timeZone}var formatDate=strftime.timezone(timeZoneScheme[timeZone]);return formatDate(dateFormat,new Date(Date.now()+(secondsOffset*1000)))};return this;function assertionPass(assertionDescriptionPrefix,assertionDescriptionSuffix){tests[assertionDescriptionPrefix+" - RESULT PASS: "+assertionDescriptionSuffix]=1}function assertionFail(assertionDescriptionPrefix,assertionDescriptionSuffix){tests[assertionDescriptionPrefix+" - RESULT FAIL: "+assertionDescriptionSuffix]=0}function exactComparison(expectedValue,actualValue){if(expectedValue===actualValue){return true}else{return false}}function testExpectedValueWithActualValue(expectedValue,actualValue,specialHandling,jsonPathToProperty){var testResult={};testResult.passed=false;testResult.description="";var regExpTrue=(expectedValue instanceof RegExp);var timeParameter=0;var actualValueAsDateString="";var expectedValueAsDateString="";var secondsOffset=0;var dateString="";var environmentVariableKey="";var environmentVariableValue="";var collectionVariableKey="";var collectionVariableValue="";if(specialHandling!==undefined){if(specialHandling==="dateAsEpoch"){timeParameter=expectedValue;if(typeof timeParameter==="number"){secondsOffset=timeParameter;if(isNotValidInteger(secondsOffset)){testResult.passed=false;testResult.description="Oops, function error: not a valid secondsOffset value: "+secondsOffset;return testResult}expectedValueAsDateString=getDateYMD(Date.now()+(secondsOffset*1000))}else{if(typeof timeParameter==="string"){dateString=timeParameter;expectedValueAsDateString=dateString.substring(0,10)}else{testResult.passed=false;testResult.description="Oops, function error: not a valid timeParameter value: "+timeParameter;return testResult}}actualValueAsDateString=getDateYMD(actualValue);if(expectedValueAsDateString===actualValueAsDateString){testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' with expectedValueAsDateString '"+expectedValueAsDateString+"' matched actualValueAsDateString (converted from epoch format) '"+actualValueAsDateString+"'.";return testResult}else{testResult.passed=false;testResult.description="Property '"+jsonPathToProperty+"' with expectedValueAsDateString '"+expectedValueAsDateString+"' did NOT match actualValueAsDateString (converted from epoch format) '"+actualValueAsDateString+"'.";return testResult}}else{if(specialHandling==="setAsEnvironmentVariable"){environmentVariableKey=expectedValue;environmentVariableValue=actualValue;pm.environment.set(environmentVariableKey,environmentVariableValue);testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' was set as an environment variable with key '"+environmentVariableKey+"' and value '"+environmentVariableValue+"'.";return testResult}else{if(specialHandling==="setAsCollectionVariable"){collectionVariableKey=expectedValue;collectionVariableValue=actualValue;pm.collectionVariables.set(collectionVariableKey,collectionVariableValue);testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' was set as a variable with collectionVariableKey '"+collectionVariableKey+"' and collectionVariableValue '"+collectionVariableValue+"'.";return testResult}else{if(specialHandling==="notThisExpectedValue"){if(regExpTrue===true){if(expectedValue.test(actualValue)!==true){testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' with RegExp expectedValue '"+expectedValue+"' CORRECTLY did NOT match actualValue '"+actualValue+"'.";return testResult}else{testResult.passed=false;testResult.description="Property '"+jsonPathToProperty+"' with RegExp expectedValue '"+expectedValue+"' INCORRECTLY DID match actualValue '"+actualValue+"'.";return testResult}}else{if(expectedValue!==actualValue){testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' with expectedValue '"+expectedValue+"' and notThisExpectedValue CORRECTLY did NOT match actualValue '"+actualValue+"'.";return testResult}else{testResult.passed=false;testResult.description="Property '"+jsonPathToProperty+"' with expectedValue '"+expectedValue+"' and notThisExpectedValue INCORRECTLY DID match actualValue '"+actualValue+"'.";return testResult}}}else{testResult.passed=false;testResult.description="Oops, function error: not a valid specialHandling value: "+specialHandling;return testResult}}}}}else{if(expectedValue!==undefined){if(regExpTrue===true){if(expectedValue.test(actualValue)===true){testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' with RegExp expectedValue '"+expectedValue+"' matched actualValue '"+actualValue+"'.";return testResult}else{testResult.passed=false;testResult.description="Property '"+jsonPathToProperty+"' with RegExp expectedValue '"+expectedValue+"' did NOT match actualValue '"+actualValue+"'.";return testResult}}else{if(expectedValue===actualValue){testResult.passed=true;testResult.description="Property '"+jsonPathToProperty+"' with expectedValue '"+expectedValue+"' matched actualValue '"+actualValue+"'.";return testResult}else{testResult.passed=false;testResult.description="Property '"+jsonPathToProperty+"' with expectedValue '"+expectedValue+"' did NOT match actualValue '"+actualValue+"'.";return testResult}}}else{testResult.passed=true;testResult.description="Found the property '"+jsonPathToProperty+"' in json response body (but not validating the value).";return testResult}}}function getObjectValueByPath(object,path){if(Array.isArray(path)){return get(object,path,undefined)}else{if(path===""){return object}else{return path.split(".").reduce(function(o,x){return(typeof o=="undefined"||o===null)?o:o[x]},object)}}}function get(object,path,defaultValue){const result=object==null?undefined:baseGet(object,path);return result===undefined?defaultValue:result}function baseGet(object,path){var index=0;const length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])]}return(index&&index==length)?object:undefined}function toKey(value){if(typeof value==="string"){return value}const result=value.toString();return(result=="0"&&(1/value)==-INFINITY)?"-0":result}function deleteObjectValueByPath(object,path){if(strictValidationEnabled===true){if(Array.isArray(path)){deleteObjectValueByPathAsArray(object,path)}else{deleteObjectValueByPathAsArray(object,path.split("."))}}}function deleteObjectValueByPathAsArray(object,pathAsArray){pathAsArray.reduce(function(o,x){if(typeof o=="undefined"||o===null){return o}else{if(typeof o[x]==="object"){return o[x]}else{delete o[x]}}},object)}function cleanObject(object){return function prune(current){_.forOwn(current,function(value,key){if(_.isUndefined(value)||_.isNull(value)||_.isNaN(value)||(_.isString(value)&&_.isEmpty(value))||(_.isObject(value)&&_.isEmpty(prune(value)))){delete current[key]}});if(_.isArray(current)){_.pull(current,undefined)}return current}(object)}function removeAllXmlNameSpaceData(object){var newKey="";traverseObject(object);function traverseObject(obj){var isArray=obj instanceof Array;Object.keys(obj).forEach(function(item){if(typeof obj[item]==="object"&&obj[item]!==null){if(isArray){traverseObject(obj[item])}else{if(item==="$"){delete obj[item]}else{newKey=getXmlNameWithoutNamespace(item);if(newKey!==item){obj[newKey]=obj[item];delete obj[item]}traverseObject(obj[newKey])}}}else{newKey=getXmlNameWithoutNamespace(item);if(newKey!==item){obj[newKey]=obj[item];delete obj[item]}}})}function getXmlNameWithoutNamespace(xmlName){var strPos1=xmlName.indexOf(":");var newXmlName=xmlName;if(strPos1>=0){newXmlName=xmlName.substring(strPos1+1)}return newXmlName}}function isNotValidInteger(value){if(/^(\+|\-)?(0|[1-9]\d*)$/.test(value)){return false}else{return true}}function getDateYMD(epochValue){var d=new Date(epochValue);var year=d.getFullYear();var month=("0"+(d.getMonth()+1)).slice(-2);var day=("0"+d.getDate()).slice(-2);return year+"-"+month+"-"+day}function strftimeModule(){var self=this;var DefaultLocale={days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],AM:"AM",PM:"PM",am:"am",pm:"pm",formats:{D:"%m/%d/%y",F:"%Y-%m-%d",R:"%H:%M",T:"%H:%M:%S",X:"%T",c:"%a %b %d %X %Y",r:"%I:%M:%S %p",v:"%e-%b-%Y",x:"%D"}},defaultStrftime=new Strftime(DefaultLocale,0,false),isCommonJS=typeof module!=="undefined",namespace;if(isCommonJS){namespace=module.exports=adaptedStrftime;namespace.strftime=deprecatedStrftime}else{namespace=(function(){return this||(1,eval)("this")}());namespace.strftime=adaptedStrftime}var _require=isCommonJS?"require('strftime')":"strftime";var _deprecationWarnings={};function deprecationWarning(name,instead){if(!_deprecationWarnings[name]){if(typeof console!=="undefined"&&typeof console.warn=="function"){console.warn("[WARNING] "+name+" is deprecated and will be removed in ver 1.0. Instead, use `"+instead+"`.")}_deprecationWarnings[name]=true}}namespace.strftimeTZ=deprecatedStrftimeTZ;namespace.strftimeUTC=deprecatedStrftimeUTC;namespace.localizedStrftime=deprecatedStrftimeLocalized;function adaptForwards(fn){fn.localize=defaultStrftime.localize.bind(defaultStrftime);fn.timezone=defaultStrftime.timezone.bind(defaultStrftime);fn.utc=defaultStrftime.utc.bind(defaultStrftime)}adaptForwards(adaptedStrftime);function adaptedStrftime(fmt,d,locale){if(d&&d.days){locale=d;d=undefined}if(locale){deprecationWarning("`"+_require+"(format, [date], [locale])`","var s = "+_require+".localize(locale); s(format, [date])")}var strftime=locale?defaultStrftime.localize(locale):defaultStrftime;return strftime(fmt,d)}adaptForwards(self);function deprecatedStrftime(fmt,d,locale){if(locale){deprecationWarning("`"+_require+".strftime(format, [date], [locale])`","var s = "+_require+".localize(locale); s(format, [date])")}else{deprecationWarning("`"+_require+".strftime(format, [date])`",_require+"(format, [date])")}var strftime=locale?defaultStrftime.localize(locale):defaultStrftime;return strftime(fmt,d)}function deprecatedStrftimeTZ(fmt,d,locale,timezone){if((typeof locale=="number"||typeof locale=="string")&&timezone==null){timezone=locale;locale=undefined}if(locale){deprecationWarning("`"+_require+".strftimeTZ(format, date, locale, tz)`","var s = "+_require+".localize(locale).timezone(tz); s(format, [date])` or `var s = "+_require+".localize(locale); s.timezone(tz)(format, [date])")}else{deprecationWarning("`"+_require+".strftimeTZ(format, date, tz)`","var s = "+_require+".timezone(tz); s(format, [date])` or `"+_require+".timezone(tz)(format, [date])")}var strftime=(locale?defaultStrftime.localize(locale):defaultStrftime).timezone(timezone);return strftime(fmt,d)}var utcStrftime=defaultStrftime.utc();function deprecatedStrftimeUTC(fmt,d,locale){if(locale){deprecationWarning("`"+_require+".strftimeUTC(format, date, locale)`","var s = "+_require+".localize(locale).utc(); s(format, [date])")}else{deprecationWarning("`"+_require+".strftimeUTC(format, [date])`","var s = "+_require+".utc(); s(format, [date])")}var strftime=locale?utcStrftime.localize(locale):utcStrftime;return strftime(fmt,d)}function deprecatedStrftimeLocalized(locale){deprecationWarning("`"+_require+".localizedStrftime(locale)`",_require+".localize(locale)");return defaultStrftime.localize(locale)}if(typeof Date.now!=="function"){Date.now=function(){return +new Date()}}function Strftime(locale,customTimezoneOffset,useUtcTimezone){var _locale=locale||DefaultLocale,_customTimezoneOffset=customTimezoneOffset||0,_useUtcBasedDate=useUtcTimezone||false,_cachedDateTimestamp=0,_cachedDate;function _strftime(format,date){var timestamp;if(!date){var currentTimestamp=Date.now();if(currentTimestamp>_cachedDateTimestamp){_cachedDateTimestamp=currentTimestamp;_cachedDate=new Date(_cachedDateTimestamp);timestamp=_cachedDateTimestamp;if(_useUtcBasedDate){_cachedDate=new Date(_cachedDateTimestamp+getTimestampToUtcOffsetFor(_cachedDate)+_customTimezoneOffset)}}else{timestamp=_cachedDateTimestamp}date=_cachedDate}else{timestamp=date.getTime();if(_useUtcBasedDate){date=new Date(date.getTime()+getTimestampToUtcOffsetFor(date)+_customTimezoneOffset)}}return _processFormat(format,date,_locale,timestamp)}function _processFormat(format,date,locale,timestamp){var resultString="",padding=null,isInScope=false,length=format.length,extendedTZ=false;for(var i=0;i<length;i++){var currentCharCode=format.charCodeAt(i);if(isInScope===true){if(currentCharCode===45){padding="";continue}else{if(currentCharCode===95){padding=" ";continue}else{if(currentCharCode===48){padding="0";continue}else{if(currentCharCode===58){if(extendedTZ){if(typeof console!=="undefined"&&typeof console.warn=="function"){console.warn("[WARNING] detected use of unsupported %:: or %::: modifiers to strftime")}}extendedTZ=true;continue}}}}switch(currentCharCode){case 65:resultString+=locale.days[date.getDay()];break;case 66:resultString+=locale.months[date.getMonth()];break;case 67:resultString+=padTill2(Math.floor(date.getFullYear()/100),padding);break;case 68:resultString+=_processFormat(locale.formats.D,date,locale,timestamp);break;case 70:resultString+=_processFormat(locale.formats.F,date,locale,timestamp);break;case 72:resultString+=padTill2(date.getHours(),padding);break;case 73:resultString+=padTill2(hours12(date.getHours()),padding);break;case 76:resultString+=padTill3(Math.floor(timestamp%1000));break;case 77:resultString+=padTill2(date.getMinutes(),padding);break;case 80:resultString+=date.getHours()<12?locale.am:locale.pm;break;case 82:resultString+=_processFormat(locale.formats.R,date,locale,timestamp);break;case 83:resultString+=padTill2(date.getSeconds(),padding);break;case 84:resultString+=_processFormat(locale.formats.T,date,locale,timestamp);break;case 85:resultString+=padTill2(weekNumber(date,"sunday"),padding);break;case 87:resultString+=padTill2(weekNumber(date,"monday"),padding);break;case 88:resultString+=_processFormat(locale.formats.X,date,locale,timestamp);break;case 89:resultString+=date.getFullYear();break;case 90:if(_useUtcBasedDate&&_customTimezoneOffset===0){resultString+="GMT"}else{var tzString=date.toString().match(/\(([\w\s]+)\)/);resultString+=tzString&&tzString[1]||""}break;case 97:resultString+=locale.shortDays[date.getDay()];break;case 98:resultString+=locale.shortMonths[date.getMonth()];break;case 99:resultString+=_processFormat(locale.formats.c,date,locale,timestamp);break;case 100:resultString+=padTill2(date.getDate(),padding);break;case 101:resultString+=padTill2(date.getDate(),padding==null?" ":padding);break;case 104:resultString+=locale.shortMonths[date.getMonth()];break;case 106:var y=new Date(date.getFullYear(),0,1);var day=Math.ceil((date.getTime()-y.getTime())/(1000*60*60*24));resultString+=padTill3(day);break;case 107:resultString+=padTill2(date.getHours(),padding==null?" ":padding);break;case 108:resultString+=padTill2(hours12(date.getHours()),padding==null?" ":padding);break;case 109:resultString+=padTill2(date.getMonth()+1,padding);break;case 110:resultString+="\n";break;case 111:resultString+=String(date.getDate())+ordinal(date.getDate());break;case 112:resultString+=date.getHours()<12?locale.AM:locale.PM;break;case 114:resultString+=_processFormat(locale.formats.r,date,locale,timestamp);break;case 115:resultString+=Math.floor(timestamp/1000);break;case 116:resultString+="\t";break;case 117:var day=date.getDay();resultString+=day===0?7:day;break;case 118:resultString+=_processFormat(locale.formats.v,date,locale,timestamp);break;case 119:resultString+=date.getDay();break;case 120:resultString+=_processFormat(locale.formats.x,date,locale,timestamp);break;case 121:resultString+=(""+date.getFullYear()).slice(2);break;case 122:if(_useUtcBasedDate&&_customTimezoneOffset===0){resultString+=extendedTZ?"+00:00":"+0000"}else{var off;if(_customTimezoneOffset!==0){off=_customTimezoneOffset/(60*1000)}else{off=-date.getTimezoneOffset()}var sign=off<0?"-":"+";var sep=extendedTZ?":":"";var hours=Math.floor(Math.abs(off/60));var mins=Math.abs(off%60);resultString+=sign+padTill2(hours)+sep+padTill2(mins)}break;default:resultString+=format[i];break}padding=null;isInScope=false;continue}if(currentCharCode===37){isInScope=true;continue}resultString+=format[i]}return resultString}var strftime=_strftime;strftime.localize=function(locale){return new Strftime(locale||_locale,_customTimezoneOffset,_useUtcBasedDate)};strftime.timezone=function(timezone){var customTimezoneOffset=_customTimezoneOffset;var useUtcBasedDate=_useUtcBasedDate;var timezoneType=typeof timezone;if(timezoneType==="number"||timezoneType==="string"){useUtcBasedDate=true;if(timezoneType==="string"){var sign=timezone[0]==="-"?-1:1,hours=parseInt(timezone.slice(1,3),10),minutes=parseInt(timezone.slice(3,5),10);customTimezoneOffset=sign*((60*hours)+minutes)*60*1000}else{if(timezoneType==="number"){customTimezoneOffset=timezone*60*1000}}}return new Strftime(_locale,customTimezoneOffset,useUtcBasedDate)};strftime.utc=function(){return new Strftime(_locale,_customTimezoneOffset,true)};return strftime}function padTill2(numberToPad,paddingChar){if(paddingChar===""||numberToPad>9){return numberToPad}if(paddingChar==null){paddingChar="0"}return paddingChar+numberToPad}function padTill3(numberToPad){if(numberToPad>99){return numberToPad}if(numberToPad>9){return"0"+numberToPad}return"00"+numberToPad}function hours12(hour){if(hour===0){return 12}else{if(hour>12){return hour-12}}return hour}function weekNumber(date,firstWeekday){firstWeekday=firstWeekday||"sunday";var weekday=date.getDay();if(firstWeekday==="monday"){if(weekday===0){weekday=6}else{weekday--}}var firstDayOfYearUtc=Date.UTC(date.getFullYear(),0,1),dateUtc=Date.UTC(date.getFullYear(),date.getMonth(),date.getDate()),yday=Math.floor((dateUtc-firstDayOfYearUtc)/86400000),weekNum=(yday+7-weekday)/7;return Math.floor(weekNum)}function ordinal(number){var i=number%10;var ii=number%100;if((ii>=11&&ii<=13)||i===0||i>=4){return"th"}switch(i){case 1:return"st";case 2:return"nd";case 3:return"rd"}}function getTimestampToUtcOffsetFor(date){return(date.getTimezoneOffset()||0)*60000}}}xtest();